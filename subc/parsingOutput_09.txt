We got what we expected - program is a <program> in char position 7
We got what we expected - Ackerman is a <identifier> in char position 16
We got what we expected - : is a <:> in char position 17
We got what we expected - var is a <var> in char position 21
We got what we expected - m is a <identifier> in char position 23
We got what we expected - , is a <,> in char position 24
We got what we expected - n is a <identifier> in char position 25
We got what we expected - : is a <:> in char position 26
We got what we expected - integer is a <identifier> in char position 33
We got what we expected - ; is a <;> in char position 34
We got what we expected - function is a <function> in char position 44
We got what we expected - ackerman is a <identifier> in char position 53
We got what we expected - ( is a <(> in char position 54
We got what we expected - m is a <identifier> in char position 55
We got what we expected - , is a <,> in char position 56
We got what we expected - n is a <identifier> in char position 57
We got what we expected - : is a <:> in char position 58
We got what we expected - integer is a <identifier> in char position 65
We got what we expected - ) is a <)> in char position 66
We got what we expected - : is a <:> in char position 67
We got what we expected - integer is a <identifier> in char position 74
We got what we expected - ; is a <;> in char position 75
We got what we expected - begin is a <begin> in char position 81
We got what we expected - if is a <if> in char position 87
We got what we expected - m is a <identifier> in char position 89
We got what we expected - = is a <=> in char position 91
We got what we expected - 0 is a <integer> in char position 93
We got what we expected - then is a <then> in char position 98
We got what we expected - return is a <return> in char position 105
We got what we expected - ( is a <(> in char position 107
We got what we expected - n is a <identifier> in char position 108
We got what we expected - + is a <+> in char position 110
We got what we expected - 1 is a <integer> in char position 112
We got what we expected - ) is a <)> in char position 113
We got what we expected - else is a <else> in char position 124
We got what we expected - if is a <if> in char position 127
We got what we expected - n is a <identifier> in char position 129
We got what we expected - = is a <=> in char position 131
We got what we expected - 0 is a <integer> in char position 133
We got what we expected - then is a <then> in char position 138
We got what we expected - return is a <return> in char position 145
We got what we expected - ( is a <(> in char position 147
We got what we expected - ackerman is a <identifier> in char position 155
We got what we expected - ( is a <(> in char position 156
We got what we expected - m is a <identifier> in char position 157
We got what we expected - - is a <-> in char position 158
We got what we expected - 1 is a <integer> in char position 159
We got what we expected - , is a <,> in char position 160
We got what we expected - 1 is a <integer> in char position 161
We got what we expected - ) is a <)> in char position 162
We got what we expected - ) is a <)> in char position 163
We got what we expected - else is a <else> in char position 172
We got what we expected - return is a <return> in char position 179
We got what we expected - ( is a <(> in char position 181
We got what we expected - ackerman is a <identifier> in char position 189
We got what we expected - ( is a <(> in char position 190
We got what we expected - m is a <identifier> in char position 191
We got what we expected - - is a <-> in char position 192
We got what we expected - 1 is a <integer> in char position 193
We got what we expected - , is a <,> in char position 194
We got what we expected - ackerman is a <identifier> in char position 202
We got what we expected - ( is a <(> in char position 203
We got what we expected - m is a <identifier> in char position 204
We got what we expected - , is a <,> in char position 205
We got what we expected - n is a <identifier> in char position 206
We got what we expected - - is a <-> in char position 207
We got what we expected - 1 is a <integer> in char position 208
We got what we expected - ) is a <)> in char position 209
We got what we expected - ) is a <)> in char position 210
We got what we expected - ) is a <)> in char position 211
We got what we expected - end is a <end> in char position 215
We got what we expected - ackerman is a <identifier> in char position 224
We got what we expected - ; is a <;> in char position 225
We got what we expected - begin is a <begin> in char position 232
We got what we expected - while is a <while> in char position 241
We got what we expected - not is a <not> in char position 245
We got what we expected - eof is a <eof> in char position 249
We got what we expected - do is a <do> in char position 252
We got what we expected - begin is a <begin> in char position 261
We got what we expected - read is a <read> in char position 272
We got what we expected - ( is a <(> in char position 273
We got what we expected - m is a <identifier> in char position 274
We got what we expected - ) is a <)> in char position 275
We got what we expected - ; is a <;> in char position 276
We got what we expected - read is a <read> in char position 316
We got what we expected - ( is a <(> in char position 317
We got what we expected - n is a <identifier> in char position 318
We got what we expected - ) is a <)> in char position 319
We got what we expected - ; is a <;> in char position 320
We got what we expected - output is a <output> in char position 362
We got what we expected - ( is a <(> in char position 364
We got what we expected - m is a <identifier> in char position 365
We got what we expected - , is a <,> in char position 366
We got what we expected - n is a <identifier> in char position 367
We got what we expected - , is a <,> in char position 368
We got what we expected - ackerman is a <identifier> in char position 376
We got what we expected - ( is a <(> in char position 377
We got what we expected - m is a <identifier> in char position 378
We got what we expected - , is a <,> in char position 379
We got what we expected - n is a <identifier> in char position 380
We got what we expected - ) is a <)> in char position 381
We got what we expected - ) is a <)> in char position 382
We got what we expected - end is a <end> in char position 389
We got what we expected - end is a <end> in char position 393
We got what we expected - Ackerman is a <identifier> in char position 402
We got what we expected - . is a <.> in char position 403
